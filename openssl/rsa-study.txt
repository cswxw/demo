[from Internet]
rsa 算法原理
    1.找出两个“很大”的质数：P & Q 
    N = P * Q 
    M = (P – 1) * (Q – 1)

    2.找出整数E，E与M互质，即除了1之外，没有其他公约数

    3.找出整数D，使得 ED 除以 M 余 1，即 (E D) % M = 1，等价于E*D-1=K*M

    4.经过上述准备工作之后，可以得到：
        E是公钥，负责加密
        D是私钥，负责解密
        N负责公钥和私钥之间的联系

    5.加密算法，假定对X进行加密
        (X ^ E) % N = Y

    6.解密算法，根据费尔马小定义，可以使用以下公式完成解密
        (Y ^ D) % N = X
		
rsa例子:
	第一步，随机选择两个不相等的质数p和q。
		爱丽丝选择了61和53。（实际应用中，这两个质数越大，就越难破解。）
		
	第二步，计算p和q的乘积n。
		爱丽丝就把61和53相乘。
			　　n = 61×53 = 3233
		n的长度就是密钥长度。3233写成二进制是110010100001，一共有12位，所以这个密钥就是12位。实际应用中，RSA密钥一般是1024位，重要场合则为2048位。
		
	第三步，计算n的欧拉函数φ(n)。
		根据公式：
			　　φ(n) = (p-1)(q-1)
		爱丽丝算出φ(3233)等于60×52，即3120。	

	第四步，随机选择一个整数e，条件是1< e < φ(n)，且e与φ(n) 互质。
		爱丽丝就在1到3120之间，随机选择了17。（实际应用中，常常选择65537。）
		
	第五步，计算e对于φ(n)的模反元素d。
		所谓"模反元素"就是指有一个整数d，可以使得ed被φ(n)除的余数为1。
			　　ed ≡ 1 (mod φ(n))
		这个式子等价于
			　　ed - 1 = kφ(n)
		于是，找到模反元素d，实质上就是对下面这个二元一次方程求解。
			　　ex + φ(n)y = 1
		已知 e=17, φ(n)=3120，
			　　17x + 3120y = 1
		这个方程可以用"扩展欧几里得算法"求解，此处省略具体过程。总之，爱丽丝算出一组整数解为 (x,y)=(2753,-15)，即 d=2753。
		至此所有计算完成。

	第六步，将n和e封装成公钥，n和d封装成私钥。
		在爱丽丝的例子中，n=3233，e=17，d=2753，所以公钥就是 (3233,17)，私钥就是（3233, 2753）。
		实际应用中，公钥和私钥的数据都采用ASN.1格式表达
		
	七、RSA算法的可靠性
		回顾上面的密钥生成步骤，一共出现六个数字：
			　　p
			　　q
			　　n
			　　φ(n)
			　　e
			　　d
		这六个数字之中，公钥用到了两个（n和e），其余四个数字都是不公开的。其中最关键的是d，因为n和d组成了私钥，一旦d泄漏，就等于私钥泄漏。
		
	那么，有无可能在已知n和e的情况下，推导出d？	
    　　（1）ed≡1 (mod φ(n))。只有知道e和φ(n)，才能算出d。
    　　（2）φ(n)=(p-1)(q-1)。只有知道p和q，才能算出φ(n)。
    　　（3）n=pq。只有将n因数分解，才能算出p和q。
	结论：如果n可以被因数分解，d就可以算出，也就意味着私钥被破解。


