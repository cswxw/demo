ListControl:

	typedef struct _LVITEM {
	UINT   mask;        //说明LVITEM结构中哪些成员有效
	int    iItem;       //项目的索引值(可以视为行号)从0开始
	int    iSubItem;    //子项的索引值(可以视为列号)从0开始
	UINT   state;       //子项的状态
	UINT   stateMask;   //状态有效的屏蔽位
	LPTSTR pszText;   //主项或子项的名称
	int    cchTextMax; //pszText所指向的缓冲区大小
	int    iImage;       //关联图像列表中指定图像的索引值
	LPARAM lParam;    //程序定义的32位参数
	int iIndent;          //表示图像位置缩进的单位
	} LVITEM, FAR *LPLVITEM;
// Get the item in the dialog
HWND DlgItem(HWND hWnd, UINT id)
{
	// Validate arguments
	if (hWnd == NULL)
	{
		return NULL;
	}

	if (id == 0)
	{
		return hWnd;
	}
	else
	{
		return GetDlgItem(hWnd, id);
	}
}
UINT SendMsg(HWND hWnd, UINT id, UINT msg, WPARAM wParam, LPARAM lParam)
{
	// Validate arguments
	if (hWnd == NULL)
	{
		return 0;
	}

	return (UINT)SendMessageA(DlgItem(hWnd, id), msg, wParam, lParam);
}

设置列表元素:
	Zero(&t, sizeof(t));
	t.mask = LVIF_TEXT;
	t.pszText = str;
	t.iItem = index;
	t.iSubItem = pos;
	SendMsg(hWnd, id, LVM_SETITEMW, 0, (LPARAM)&t);
		
获取列表元素：
	Zero(&t, sizeof(t));
	t.mask = LVIF_TEXT;
	t.iItem = index;
	t.iSubItem = pos;
	t.pszText = tmp;
	t.cchTextMax = size;
	SendMsg(hWnd, id, LVM_GETITEMTEXTW, index, (LPARAM)&t)

插入元素：新增的第一列元素需要插入，以后几列设置元素即可
	Zero(&t, sizeof(t));
	t.mask = LVIF_IMAGE | LVIF_PARAM | LVIF_TEXT;
	t.pszText = str;
	t.iImage = image;
	t.lParam = (LPARAM)param;
	t.iItem = LvNum(hWnd, id);
	SendMsg(hWnd, id, LVM_INSERTITEMW, 0, (LPARAM)&t);

删除元素：
	ListView_DeleteItem(DlgItem(hWnd, id), index);

设置图标：
	Zero(&t, sizeof(t));
	t.mask = LVIF_IMAGE;
	t.iImage = image;
	t.iItem = index;

	SendMsg(hWnd, id, LVM_SETITEM, 0, (LPARAM)&t);

